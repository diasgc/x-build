include(CheckIncludeFile)
include(CheckSymbolExists)
include(CheckFunctionExists)
include(CheckTypeSize)

macro(check_headers)
    foreach(var ${ARGV})
        if(var MATCHES ^HAVE.*_H$)
            string(REGEX REPLACE "^HAVE_" "" hdr ${var})
            string(REGEX REPLACE "_H$" "" hdr ${hdr})
            string(REPLACE "_" "/" hdr ${hdr})
            string(TOLOWER ${hdr} hdr)
            check_include_file("${hdr}.h" ${var})
        else()
            message(STATUS "unknown header for ${var}, skipping")
        endif()
    endforeach()    
endmacro()

macro(check_functions)
    foreach(var ${ARGV})
        if(var MATCHES ^HAVE_)
            string(REGEX REPLACE "^HAVE_" "" fun ${var})
            string(TOLOWER ${fun} fun)
            check_function_exists(${fun} ${var})
        else()
            message(STATUS "Cannot guess function for ${var}")
        endif()
    endforeach()
endmacro()

macro(check_types)
    foreach(var ${ARGV})
        if(var MATCHES ^HAVE_.*T$)
            string(REGEX REPLACE "^HAVE_" "" type ${var})
            string(REPLACE "__" "::" type ${type})
            string(TOLOWER ${type} type)
            check_type_size(${type} out)
            if(NOT out STREQUAL "")
                set(${var} 1)
            endif()
        else()
            message(STATUS "Cannot guess function for ${var}")
        endif()
    endforeach()
endmacro()

macro(add_config)
    set(options DEFONLY DEF1 DEF10 DEFVAL UNDEF)
    set(oneValueArgs FILE)
    set(multiValueArgs VARS)
    cmake_parse_arguments(ADD_CONFIG
        "${options}"
        "${oneValueArgs}"
        "${multiValueArgs}"
        ${ARGN}
    )
    set(entry "")
    message(STATUS "Writing config to ${ADD_CONFIG_FILE}")
    foreach(p ${ADD_CONFIG_VARS})
        if(ADD_CONFIG_DEFVAL)
            if(NOT ${${p}} STREQUAL "")
                string(APPEND entry "#define ${p} ${${p}}\n")
            elseif(ADD_CONFIG_UNDEF)
                string(APPEND entry "#undef ${p}\n")
            else()
                string(APPEND entry "/* #undef ${p} */\n")
            endif()
        elseif(${${p}})
            if(ADD_CONFIG_DEF1 OR ADD_CONFIG_DEF10)
                string(APPEND entry "#define ${p} 1\n")
            else()
                string(APPEND entry "#define ${p}\n")
            endif()
        else()
            if(ADD_CONFIG_DEF10)
                string(APPEND entry "#define ${p} 0\n")
            elseif(ADD_CONFIG_UNDEF)        
                string(APPEND entry "#undef ${p}\n")
            else()
                string(APPEND entry "/* #undef ${p} */\n")
            endif()
        endif()
    endforeach()
    if(EXISTS ${ADD_CONFIG_FILE})
        file(READ ${ADD_CONFIG_FILE} out)
    else()
        file(TOUCH ${ADD_CONFIG_FILE})
    endif()
    file(CONFIGURE OUTPUT ${ADD_CONFIG_FILE} CONTENT "${out} \n${entry}")
endmacro()
