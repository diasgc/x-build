--- CMakeLists.txt	2022-03-12 01:19:24.968233700 +0000
+++ CMakeLists.txt	2022-03-12 11:44:00.022449800 +0000
@@ -56,17 +56,40 @@
   set(CMAKE_CXX_FLAGS " ${CMAKE_CXX_FLAGS} -fsanitize=${ENABLE_SANITIZER}")
   set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=${ENABLE_SANITIZER}")
 endif ()
-
-add_library(lzfse
-  src/lzfse_decode.c
-  src/lzfse_decode_base.c
-  src/lzfse_encode.c
-  src/lzfse_encode_base.c
-  src/lzfse_fse.c
-  src/lzvn_decode_base.c
-  src/lzvn_encode_base.c)
-lzfse_add_compiler_flags(lzfse -Wall -Wno-unknown-pragmas -Wno-unused-variable)
-
+include(GNUInstallDirs)
+function(add_lib sfx lnk)
+  add_library(lzfse${sfx} ${lnk} 
+    src/lzfse_decode.c
+    src/lzfse_decode_base.c
+    src/lzfse_encode.c
+    src/lzfse_encode_base.c
+    src/lzfse_fse.c
+    src/lzvn_decode_base.c
+    src/lzvn_encode_base.c)
+  lzfse_add_compiler_flags(lzfse${sfx} -Wall -Wno-unknown-pragmas -Wno-unused-variable)
+  if(CMAKE_VERSION VERSION_LESS 3.1 OR CMAKE_C_COMPLIER_ID STREQUAL "Intel")
+    lzfse_add_compiler_flags(lzfse${sfx} -std=c99)
+  else()
+    set_property(TARGET lzfse${sfx} PROPERTY C_STANDARD 99)
+  endif()
+  set_host_properties(lzfse${sfx} PROPERTIES
+    POSITION_INDEPENDENT_CODE TRUE
+    C_VISIBILITY_PRESET hidden
+    INTERPROCEDURAL_OPTIMIZATION TRUE
+    OUTPUT_NAME lzfse)
+    if(BUILD_SHARED_LIBS AND sfx STREQUAL "")
+      set_property(TARGET lzfse APPEND PROPERTY COMPILE_DEFINITIONS LZFSE_DLL LZFSE_DLL_EXPORTS)
+      set_property(TARGET lzfse APPEND PROPERTY INTERFACE_COMPILE_DEFINITIONS LZFSE_DLL)
+    endif()
+    install(TARGETS lzfse${sfx}
+      RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+      LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+      ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+endfunction()
+add_lib("" "")
+if(BUILD_STATIC_LIBS AND BUILD_SHARED_LIBS)
+  add_lib("-static" STATIC)
+endif()
 add_executable(lzfse_cli
   src/lzfse_main.c)
 target_link_libraries(lzfse_cli lzfse)
@@ -74,28 +97,15 @@
 lzfse_add_compiler_flags(lzfse_cli -Wall -Wno-unknown-pragmas -Wno-unused-variable)
 
 if(CMAKE_VERSION VERSION_LESS 3.1 OR CMAKE_C_COMPLIER_ID STREQUAL "Intel")
-  lzfse_add_compiler_flags(lzfse -std=c99)
   lzfse_add_compiler_flags(lzfse_cli -std=c99)
 else()
-  set_property(TARGET lzfse PROPERTY C_STANDARD 99)
   set_property(TARGET lzfse_cli PROPERTY C_STANDARD 99)
 endif()
 
-set_host_properties(lzfse PROPERTIES
-  POSITION_INDEPENDENT_CODE TRUE
-  C_VISIBILITY_PRESET hidden
-  INTERPROCEDURAL_OPTIMIZATION TRUE)
-
-if(BUILD_SHARED_LIBS)
-  set_property(TARGET lzfse APPEND PROPERTY COMPILE_DEFINITIONS LZFSE_DLL LZFSE_DLL_EXPORTS)
-  set_property(TARGET lzfse APPEND PROPERTY INTERFACE_COMPILE_DEFINITIONS LZFSE_DLL)
-endif()
-
 # Installation
 if(NOT LZFSE_BUNDLE_MODE)
   include(GNUInstallDirs)
-
-  install(TARGETS lzfse lzfse_cli
+  install(TARGETS lzfse_cli
     RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
     LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
     ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
@@ -135,3 +145,5 @@
         -P ${CMAKE_CURRENT_SOURCE_DIR}/tests/round-trip.cmake)
   endforeach()
 endif()
+configure_file(lzfse.pc.in lzfse.pc @ONLY)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/lzfse.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)

--- lzfse.pc.in	1970-01-01 01:00:00.000000000 +0100
+++ lzfse.pc.in	2022-03-12 11:43:07.012449800 +0000
@@ -0,0 +1,15 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${exec_prefix}/lib
+includedir=${prefix}/include
+
+Name: lzfse
+Description: LZFSE compression library and command line tool
+URL: https://github.com/lzfse
+Version: @CPACK_PACKAGE_VERSION@
+Requires: 
+Requires.private: 
+Libs: -L${libdir} -llzfse
+Libs.private: 
+Cflags: -I${includedir}
+  

