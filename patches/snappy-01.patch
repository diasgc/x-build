--- CMakeLists.txt	2022-02-11 17:44:44.549000000 +0000
+++ CMakeLists.txt	2022-02-11 18:29:16.552698200 +0000
@@ -84,7 +84,7 @@
 
 # BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to make
 # it prominent in the GUI.
-option(BUILD_SHARED_LIBS "Build shared libraries(DLLs)." OFF)
+option(BUILD_STATIC_LIBS "Build static libraries." ON)
 
 option(SNAPPY_BUILD_TESTS "Build Snappy's own tests." ON)
 
@@ -183,7 +183,7 @@
 int main() {
   uint8_t val = 3, dup[8];
   uint8x16_t v = vld1q_dup_u8(&val);
-  vst1q_u8(dup, v);
+  vqtbl1q_u8(dup, v);
   return 0;
 }" SNAPPY_HAVE_NEON)
 
@@ -222,41 +222,52 @@
   "snappy-stubs-public.h.in"
   "${PROJECT_BINARY_DIR}/snappy-stubs-public.h")
 
-add_library(snappy "")
-target_sources(snappy
-  PRIVATE
-    "snappy-internal.h"
-    "snappy-stubs-internal.h"
-    "snappy-c.cc"
-    "snappy-sinksource.cc"
-    "snappy-stubs-internal.cc"
-    "snappy.cc"
-    "${PROJECT_BINARY_DIR}/config.h"
-
-  # Only CMake 3.3+ supports PUBLIC sources in targets exported by "install".
-  $<$<VERSION_GREATER:CMAKE_VERSION,3.2>:PUBLIC>
-    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy-c.h>
-    $<INSTALL_INTERFACE:include/snappy-c.h>
-    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy-sinksource.h>
-    $<INSTALL_INTERFACE:include/snappy-sinksource.h>
-    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy.h>
-    $<INSTALL_INTERFACE:include/snappy.h>
-    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/snappy-stubs-public.h>
-    $<INSTALL_INTERFACE:include/snappy-stubs-public.h>
-)
-target_include_directories(snappy
-  PUBLIC
-    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
-    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
-    $<INSTALL_INTERFACE:include>
-)
-set_host_properties(snappy
-  PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR})
+set(build_types snappy)
+
+if(BUILD_SHARED_LIBS AND BUILD_STATIC_LIBS)
+  list(APPEND build_types snappy-static)
+endif()
+
+foreach(libsnappy ${build_types})
+  if(${libsnappy} MATCHES "-static$")
+    add_library(${libsnappy} STATIC "")
+  else()
+    add_library(${libsnappy} "")
+    set_host_properties(${libsnappy} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
+  endif()
+
+  target_sources(${libsnappy}
+    PRIVATE
+      "snappy-internal.h"
+      "snappy-stubs-internal.h"
+      "snappy-c.cc"
+      "snappy-sinksource.cc"
+      "snappy-stubs-internal.cc"
+      "snappy.cc"
+      "${PROJECT_BINARY_DIR}/config.h"
+
+    # Only CMake 3.3+ supports PUBLIC sources in targets exported by "install".
+    $<$<VERSION_GREATER:CMAKE_VERSION,3.2>:PUBLIC>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy-c.h>
+      $<INSTALL_INTERFACE:include/snappy-c.h>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy-sinksource.h>
+      $<INSTALL_INTERFACE:include/snappy-sinksource.h>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/snappy.h>
+      $<INSTALL_INTERFACE:include/snappy.h>
+      $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/snappy-stubs-public.h>
+      $<INSTALL_INTERFACE:include/snappy-stubs-public.h>
+  )
+  target_include_directories(${libsnappy}
+    PUBLIC
+      $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
+      $<INSTALL_INTERFACE:include>
+  )
+  set_host_properties(${libsnappy}
+    PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR} OUTPUT_NAME snappy)
 
-target_compile_definitions(snappy PRIVATE -DHAVE_CONFIG_H)
-if(BUILD_SHARED_LIBS)
-  set_host_properties(snappy PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
-endif(BUILD_SHARED_LIBS)
+  target_compile_definitions(${libsnappy} PRIVATE -DHAVE_CONFIG_H)
+endforeach()
 
 if(SNAPPY_BUILD_TESTS OR SNAPPY_BUILD_BENCHMARKS)
   add_library(snappy_test_support "")
@@ -368,7 +379,7 @@
 include(GNUInstallDirs)
 
 if(SNAPPY_INSTALL)
-  install(TARGETS snappy
+  install(TARGETS ${build_types}
     EXPORT SnappyTargets
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}

