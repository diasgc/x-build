#!/bin/bash

lib='vvenc'
pkg='libvvenc'
dsc='Fraunhofer Versatile Video Encoder'
lic='LGPL-2.1'
src='https://github.com/fraunhoferhhi/vvenc.git'
cfg='cmake'
eta='560'
cmake_static='BUILD_STATIC_LIBS'

lst_inc='vvenc/*.h'
lst_lib='libvvenc'
lst_bin='vvencapp vvencFFapp'
lst_lic='AUTHORS.md LICENSE.txt'
lst_pc='libvvenc.pc'

dev_bra='master'
dev_vrs='1.3.1'

on_config_arm(){
  cmake_config+=' -DVVENC_ENABLE_X86_SIMD=FALSE -DVVENC_ENABLE_ARM_SIMD=TRUE'
}

. xbuild

start

# cpu av8 av7 x86 x64
# NDK +++ +++  .   .  clang
# GNU +++  .   .  +++ gcc
# WIN +++  .   .   .  clang/gcc


# patch 01 on CMakeLists.txt to support arm build
# patch 02 on source/Lib/apputils/CMakeLists.txt to remove -Werror
# patch 03 on source/Lib/vvenc/CMakeLists.txt to remove -Werror and 
# patch 04 on cmake/modules/vvencInstall.cmake to support dual static/shared config 
# patch 05 on source/Lib/vvenc/vvencimpl.cpp to fix malloc_trim error on android-ndk
<<'XB64_PATCH'
LS0tIENNYWtlTGlzdHMudHh0CTIwMjEtMTAtMDggMTY6MTI6MDIuMTk4MDAwMDAwICswMTAwCisrKyBDTWFrZUxpc3
RzLnR4dAkyMDIxLTEwLTA4IDE2OjEyOjQxLjIwMDAwMDAwMCArMDEwMApAQCAtMTIsOCArMTIsOCBAQAogIyBwcm9q
ZWN0IG5hbWUKIHByb2plY3QoIHZ2ZW5jIFZFUlNJT04gMS4xLjAgKQogCi1zZXQoIFZWRU5DX0VOQUJMRV9YODZfU0
lNRCBUUlVFICkKLXNldCggVlZFTkNfRU5BQkxFX0FSTV9TSU1EIEZBTFNFICkKK29wdGlvbiggVlZFTkNfRU5BQkxF
X1g4Nl9TSU1EICJlbmFibGUgeDg2IGludHJpbnNpY3MiIFRSVUUpCitvcHRpb24oIFZWRU5DX0VOQUJMRV9BUk1fU0
lNRCAiZW5hYmxlIGFybSBpbnRyaW5zaWNzIiBGQUxTRSApCiAKIGlmKCBBUFBMRSApCiAgIGlmKCBERUZJTkVEIENN
QUtFX09TWF9BUkNISVRFQ1RVUkVTICkKCi0tLSBzb3VyY2UvTGliL2FwcHV0aWxzL0NNYWtlTGlzdHMudHh0CTIwMj
ItMDItMjUgMTg6MjM6MTAuNjA2MjkxNDAwICswMDAwCisrKyBzb3VyY2UvTGliL2FwcHV0aWxzL0NNYWtlTGlzdHMu
dHh0CTIwMjItMDItMjUgMTg6Mzg6MzkuMjc2MjkxNDAwICswMDAwCkBAIC01MSw4ICs1MSw4IEBACiB0YXJnZXRfY2
9tcGlsZV9kZWZpbml0aW9ucyggJHtMSUJfTkFNRX0gUFVCTElDICQ8JDxBTkQ6JDxQTEFURk9STV9JRDpXaW5kb3dz
PiwkPFNUUkVRVUFMOiQ8VEFSR0VUX1BST1BFUlRZOiR7TElCX05BTUV9LFRZUEU+LFNIQVJFRF9MSUJSQVJZPj46JH
tMSUJfTkFNRV9VQ31fRFlOX0xJTks+ICkKIAogCi10YXJnZXRfY29tcGlsZV9vcHRpb25zKCAke0xJQl9OQU1FfSBQ
UklWQVRFICQ8JDxPUjokPENYWF9DT01QSUxFUl9JRDpDbGFuZz4sJDxDWFhfQ09NUElMRVJfSUQ6QXBwbGVDbGFuZz
4+Oi1XYWxsIC1XZXJyb3IgPgotICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJDwk
PENYWF9DT01QSUxFUl9JRDpHTlU+Oi1XYWxsIC1XZXJyb3IgPgordGFyZ2V0X2NvbXBpbGVfb3B0aW9ucyggJHtMSU
JfTkFNRX0gUFJJVkFURSAkPCQ8T1I6JDxDWFhfQ09NUElMRVJfSUQ6Q2xhbmc+LCQ8Q1hYX0NPTVBJTEVSX0lEOkFw
cGxlQ2xhbmc+PjotV2FsbCAtV25vLWVycm9yID4KKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
AgICAgICAgICQ8JDxDWFhfQ09NUElMRVJfSUQ6R05VPjotV2FsbCAtV25vLWVycm9yID4KICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ8JDxDWFhfQ09NUElMRVJfSUQ6TVNWQz46L1c0IC9XWCAvd2
Q0MTAwIC93ZDQxMjcgL3dkNDI0NCAvd2Q0MjQ1IC93ZDQyNTEgL3dkNDMxMCAvd2Q0Mzg5IC93ZDQ0NTYgL3dkNDQ1
NyAvd2Q0NDU4IC93ZDQ0NTkgL3dkNDUwNSAvd2Q0NzAxIC93ZDQ3MDIgL3dkNDcwMyAvd2Q0OTk2ID4pCiAKIAotLS
0gc291cmNlL0xpYi92dmVuYy9DTWFrZUxpc3RzLnR4dAkyMDIyLTAyLTI1IDE4OjIxOjE2Ljc4NjI5MTQwMCArMDAw
MAorKysgc291cmNlL0xpYi92dmVuYy9DTWFrZUxpc3RzLnR4dAkyMDIyLTAyLTI1IDE4OjQyOjE1LjMwNjI5MTQwMC
ArMDAwMApAQCAtODMsMzUgKzgzLDQyIEBACiBpZiggTVNWQyApCiAgIHNldCggUkVTT1VSQ0VfRklMRSAke0xJQl9O
QU1FfS5yYyApCiBlbmRpZigpCitmdW5jdGlvbihhZGRfbGliIHNmeCBsbmspCithZGRfbGlicmFyeSggJHtMSUJfTk
FNRX0ke3NmeH0gJHtsbmt9ICR7U1JDX0ZJTEVTfSAke0lOQ19GSUxFU30gJHtOQVRWSVNfRklMRVN9ICR7UkVTT1VS
Q0VfRklMRX0gKQogCi1hZGRfbGlicmFyeSggJHtMSUJfTkFNRX0gJHtTUkNfRklMRVN9ICR7SU5DX0ZJTEVTfSAke0
5BVFZJU19GSUxFU30gJHtSRVNPVVJDRV9GSUxFfSApCit0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyggJHtMSUJf
TkFNRX0ke3NmeH0gUFJJVkFURSAke0xJQl9OQU1FX1VDfV9TT1VSQ0UgKQordGFyZ2V0X2NvbXBpbGVfZGVmaW5pdG
lvbnMoICR7TElCX05BTUV9JHtzZnh9IFBVQkxJQyAkPCQ8QU5EOiQ8UExBVEZPUk1fSUQ6V2luZG93cz4sJDxTVFJF
UVVBTDokPFRBUkdFVF9QUk9QRVJUWToke0xJQl9OQU1FfSxUWVBFPixTSEFSRURfTElCUkFSWT4+OiR7TElCX05BTU
VfVUN9X0RZTl9MSU5LPiApCiAKLXRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKCAke0xJQl9OQU1FfSBQUklWQVRF
ICR7TElCX05BTUVfVUN9X1NPVVJDRSApCi10YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyggJHtMSUJfTkFNRX0gUF
VCTElDICQ8JDxBTkQ6JDxQTEFURk9STV9JRDpXaW5kb3dzPiwkPFNUUkVRVUFMOiQ8VEFSR0VUX1BST1BFUlRZOiR7
TElCX05BTUV9LFRZUEU+LFNIQVJFRF9MSUJSQVJZPj46JHtMSUJfTkFNRV9VQ31fRFlOX0xJTks+ICkKLQotdGFyZ2
V0X2NvbXBpbGVfb3B0aW9ucyggJHtMSUJfTkFNRX0gUFJJVkFURSAkPCQ8T1I6JDxDWFhfQ09NUElMRVJfSUQ6Q2xh
bmc+LCQ8Q1hYX0NPTVBJTEVSX0lEOkFwcGxlQ2xhbmc+PjotV2FsbCAtV2Vycm9yIC1Xbm8tZGVwcmVjYXRlZC1yZW
dpc3RlciAtV25vLXVudXNlZC1jb25zdC12YXJpYWJsZSAtV25vLXVua25vd24tYXR0cmlidXRlcz4KLSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJDwkPENYWF9DT01QSUxFUl9JRDpHTlU+Oi1XYWxsIC
1XZXJyb3IgLVduby11bnVzZWQtZnVuY3Rpb24gIC1Xbm8tdW51c2VkLXZhcmlhYmxlICAtV25vLXNpZ24tY29tcGFy
ZSAgLWZkaWFnbm9zdGljcy1zaG93LW9wdGlvbiAtV25vLWlnbm9yZWQtYXR0cmlidXRlcz4KK3RhcmdldF9jb21waW
xlX29wdGlvbnMoICR7TElCX05BTUV9JHtzZnh9IFBSSVZBVEUgJDwkPE9SOiQ8Q1hYX0NPTVBJTEVSX0lEOkNsYW5n
PiwkPENYWF9DT01QSUxFUl9JRDpBcHBsZUNsYW5nPj46LVdhbGwgLVduby1lcnJvciAtV25vLWRlcHJlY2F0ZWQtcm
VnaXN0ZXIgLVduby11bnVzZWQtY29uc3QtdmFyaWFibGUgLVduby11bmtub3duLWF0dHJpYnV0ZXM+CisgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ8JDxDWFhfQ09NUElMRVJfSUQ6R05VPjotV2FsbC
AtV25vLWVycm9yIC1Xbm8tdW51c2VkLWZ1bmN0aW9uICAtV25vLXVudXNlZC12YXJpYWJsZSAgLVduby1zaWduLWNv
bXBhcmUgIC1mZGlhZ25vc3RpY3Mtc2hvdy1vcHRpb24gLVduby1pZ25vcmVkLWF0dHJpYnV0ZXM+CiAgICAgICAgIC
AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ8JDxDWFhfQ09NUElMRVJfSUQ6TVNWQz46L1c0IC9X
WCAvd2Q0MTAwIC93ZDQxMjcgL3dkNDI0NCAvd2Q0MjQ1IC93ZDQyNTEgL3dkNDMxMCAvd2Q0Mzg5IC93ZDQ0NTYgL3
dkNDQ1NyAvd2Q0NDU4IC93ZDQ0NTkgL3dkNDUwNSAvd2Q0NzAxIC93ZDQ3MDIgL3dkNDcwMyAvd2Q0OTk2ID4pCiAK
IGlmKCBDTUFLRV9DT01QSUxFUl9JU19HTlVDQyBBTkQgQ01BS0VfQ1hYX0NPTVBJTEVSX1ZFUlNJT04gVkVSU0lPTl
9MRVNTIDcuMCApCi0gIHRhcmdldF9jb21waWxlX29wdGlvbnMoICR7TElCX05BTUV9IFBSSVZBVEUgJDwkPENYWF9D
T01QSUxFUl9JRDpHTlU+OiAtV25vLWFycmF5LWJvdW5kcz4gKQorICB0YXJnZXRfY29tcGlsZV9vcHRpb25zKCAke0
xJQl9OQU1FfSR7c2Z4fSBQUklWQVRFICQ8JDxDWFhfQ09NUElMRVJfSUQ6R05VPjogLVduby1hcnJheS1ib3VuZHM+
ICkKIGVuZGlmKCkKIAotdGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZXMoICR7TElCX05BTUV9IFBSSVZBVEUgICAgIC
AgICAgICQ8QlVJTERfSU5URVJGQUNFOiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi8uLi8uLi9pbmNsdWRl
PiAkPEJVSUxEX0lOVEVSRkFDRToke0NNQUtFX0JJTkFSWV9ESVJ9PgordGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZX
MoICR7TElCX05BTUV9JHtzZnh9IFBSSVZBVEUgICAgICAgICAgICQ8QlVJTERfSU5URVJGQUNFOiR7Q01BS0VfQ1VS
UkVOVF9TT1VSQ0VfRElSfS8uLi8uLi8uLi9pbmNsdWRlPiAkPEJVSUxEX0lOVEVSRkFDRToke0NNQUtFX0JJTkFSWV
9ESVJ9PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNZU1RFTSBJTlRFUkZBQ0UgICQ8
QlVJTERfSU5URVJGQUNFOiR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi8uLi8uLi9pbmNsdWRlPiAkPEJVSU
xEX0lOVEVSRkFDRToke0NNQUtFX0JJTkFSWV9ESVJ9PiApCi10YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyggJHtM
SUJfTkFNRX0gUFJJVkFURSAuIC4uIC4uL0RlY29kZXJMaWIgLi4vRW5jb2RlckxpYiAuLi9Db21tb25MaWIgLi4vQ2
9tbW9uTGliL3g4NiApCit0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyggJHtMSUJfTkFNRX0ke3NmeH0gUFJJVkFU
RSAuIC4uIC4uL0RlY29kZXJMaWIgLi4vRW5jb2RlckxpYiAuLi9Db21tb25MaWIgLi4vQ29tbW9uTGliL3g4NiApCi
AKIGlmKCBWVkVOQ19FTkFCTEVfVEhJUkRQQVJUWV9KU09OICkKICAgc2V0KCBDTUFLRV9DX0ZMQUdTICIke0NNQUtF
X0NfRkxBR1N9IC1EVlZFTkNfRU5BQkxFX1RISVJEUEFSVFlfSlNPTiIgKQogICBzZXQoIENNQUtFX0NYWF9GTEFHUy
AiJHtDTUFLRV9DWFhfRkxBR1N9IC1EVlZFTkNfRU5BQkxFX1RISVJEUEFSVFlfSlNPTiIgKQotICB0YXJnZXRfaW5j
bHVkZV9kaXJlY3RvcmllcyggJHtMSUJfTkFNRX0gUFJJVkFURSAuLi8uLi8uLi90aGlyZHBhcnR5L25sb2htYW5uX2
pzb24vc2luZ2xlX2luY2x1ZGUgKQorICB0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyggJHtMSUJfTkFNRX0ke3Nm
eH0gUFJJVkFURSAuLi8uLi8uLi90aGlyZHBhcnR5L25sb2htYW5uX2pzb24vc2luZ2xlX2luY2x1ZGUgKQogZW5kaW
YoKQogCiBpZiggVEFSR0VUIElOVEVMX0lUVCkKLSAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKCAke0xJQl9OQU1FfSBQ
UklWQVRFIElOVEVMX0lUVCBUaHJlYWRzOjpUaHJlYWRzIGFwcHV0aWxzICkKKyAgdGFyZ2V0X2xpbmtfbGlicmFyaW
VzKCAke0xJQl9OQU1FfSR7c2Z4fSBQUklWQVRFIElOVEVMX0lUVCBUaHJlYWRzOjpUaHJlYWRzIGFwcHV0aWxzICkK
IGVsc2UoKQotICB0YXJnZXRfbGlua19saWJyYXJpZXMoICR7TElCX05BTUV9IFBSSVZBVEUgVGhyZWFkczo6VGhyZW
FkcyBhcHB1dGlscyApCisgIHRhcmdldF9saW5rX2xpYnJhcmllcyggJHtMSUJfTkFNRX0ke3NmeH0gUFJJVkFURSBU
aHJlYWRzOjpUaHJlYWRzIGFwcHV0aWxzICkKIGVuZGlmKCkKIAogIyBzZXQgdGhlIGZvbGRlciB3aGVyZSB0byBwbG
FjZSB0aGUgcHJvamVjdHMKLXNldF90YXJnZXRfcHJvcGVydGllcyggJHtMSUJfTkFNRX0gUFJPUEVSVElFUyBGT0xE
RVIgbGliICkKK3NldF90YXJnZXRfcHJvcGVydGllcyggJHtMSUJfTkFNRX0ke3NmeH0gUFJPUEVSVElFUyBGT0xERV
IgbGliIE9VVFBVVF9OQU1FICR7TElCX05BTUV9KQorZW5kZnVuY3Rpb24oKQorCithZGRfbGliKCIiICIiKQoraWYo
QlVJTERfU0hBUkVEX0xJQlMgQU5EIEJVSUxEX1NUQVRJQ19MSUJTKQorICBhZGRfbGliKCItc3RhdGljIiBTVEFUSU
MpCisgIGluc3RhbGwoVEFSR0VUUyAke0xJQl9OQU1FfS1zdGF0aWMgREVTVElOQVRJT04gJHtDTUFLRV9JTlNUQUxM
X0xJQkRJUn0pCitlbmRpZigpCgotLS0gY21ha2UvbW9kdWxlcy92dmVuY0luc3RhbGwuY21ha2UJMjAyMi0wMi0yNS
AxODoyODoxNi4xMjYyOTE0MDAgKzAwMDAKKysrIGNtYWtlL21vZHVsZXMvdnZlbmNJbnN0YWxsLmNtYWtlCTIwMjIt
MDItMjUgMTk6MDE6NDIuNTE2MjkxNDAwICswMDAwCkBAIC03NCwxNyArNzQsMjAgQEAKIGluc3RhbGwoIEZJTEVTIG
NtYWtlL2luc3RhbGwvdnZlbmNDb25maWcuY21ha2UgICAgICAgICAgICAgICAgICAgICAgIERFU1RJTkFUSU9OICR7
Q01BS0VfSU5TVEFMTF9MSUJESVJ9L2NtYWtlL3Z2ZW5jICkKIGluc3RhbGwoIEZJTEVTICR7Q01BS0VfQ1VSUkVOVF
9CSU5BUllfRElSfS92dmVuY0NvbmZpZ1ZlcnNpb24uY21ha2UgIERFU1RJTkFUSU9OICR7Q01BS0VfSU5TVEFMTF9M
SUJESVJ9L2NtYWtlL3Z2ZW5jICkKIAorZnVuY3Rpb24oaW5zdGFsbF9jb25maWdzIENPTkZJR19QT1NURklYKQorIC
AjIGNyZWF0ZSB0YXJnZXQgY21ha2UgZmlsZXMKKyAgaW5zdGFsbCggRVhQT1JUIHZ2ZW5jVGFyZ2V0cy1yZWxlYXNl
ICAgICAgICBOQU1FU1BBQ0UgdnZlbmM6OiBGSUxFIHZ2ZW5jVGFyZ2V0cy0ke0NPTkZJR19QT1NURklYfS5jbWFrZS
BDT05GSUdVUkFUSU9OUyBSZWxlYXNlICAgICAgICBERVNUSU5BVElPTiAke0NNQUtFX0lOU1RBTExfTElCRElSfS9j
bWFrZS92dmVuYyApCisgIGluc3RhbGwoIEVYUE9SVCB2dmVuY1RhcmdldHMtZGVidWcgICAgICAgICAgTkFNRVNQQU
NFIHZ2ZW5jOjogRklMRSB2dmVuY1RhcmdldHMtJHtDT05GSUdfUE9TVEZJWH0uY21ha2UgQ09ORklHVVJBVElPTlMg
RGVidWcgICAgICAgICAgREVTVElOQVRJT04gJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0vY21ha2UvdnZlbmMgKQorIC
BpbnN0YWxsKCBFWFBPUlQgdnZlbmNUYXJnZXRzLXJlbHdpdGhkZWJpbmZvIE5BTUVTUEFDRSB2dmVuYzo6IEZJTEUg
dnZlbmNUYXJnZXRzLSR7Q09ORklHX1BPU1RGSVh9LmNtYWtlIENPTkZJR1VSQVRJT05TIFJlbFdpdGhEZWJJbmZvIE
RFU1RJTkFUSU9OICR7Q01BS0VfSU5TVEFMTF9MSUJESVJ9L2NtYWtlL3Z2ZW5jICkKK2VuZGZ1bmN0aW9uKCkKKwog
IyBzZXQgY29uZmlnIHBvc3RmaXgKIGlmKCBCVUlMRF9TSEFSRURfTElCUyApCi0gIHNldCggQ09ORklHX1BPU1RGSV
ggc2hhcmVkICkKLWVsc2UoKQotICBzZXQoIENPTkZJR19QT1NURklYIHN0YXRpYyApCisgIGluc3RhbGxfY29uZmln
cyhzaGFyZWQpCitlbmRpZigpCitpZiggQlVJTERfU1RBVElDX0xJQlMgKQorICBpbnN0YWxsX2NvbmZpZ3Moc3RhdG
ljKQogZW5kaWYoKQotCi0jIGNyZWF0ZSB0YXJnZXQgY21ha2UgZmlsZXMKLWluc3RhbGwoIEVYUE9SVCB2dmVuY1Rh
cmdldHMtcmVsZWFzZSAgICAgICAgTkFNRVNQQUNFIHZ2ZW5jOjogRklMRSB2dmVuY1RhcmdldHMtJHtDT05GSUdfUE
9TVEZJWH0uY21ha2UgQ09ORklHVVJBVElPTlMgUmVsZWFzZSAgICAgICAgREVTVElOQVRJT04gJHtDTUFLRV9JTlNU
QUxMX0xJQkRJUn0vY21ha2UvdnZlbmMgKQotaW5zdGFsbCggRVhQT1JUIHZ2ZW5jVGFyZ2V0cy1kZWJ1ZyAgICAgIC
AgICBOQU1FU1BBQ0UgdnZlbmM6OiBGSUxFIHZ2ZW5jVGFyZ2V0cy0ke0NPTkZJR19QT1NURklYfS5jbWFrZSBDT05G
SUdVUkFUSU9OUyBEZWJ1ZyAgICAgICAgICBERVNUSU5BVElPTiAke0NNQUtFX0lOU1RBTExfTElCRElSfS9jbWFrZS
92dmVuYyApCi1pbnN0YWxsKCBFWFBPUlQgdnZlbmNUYXJnZXRzLXJlbHdpdGhkZWJpbmZvIE5BTUVTUEFDRSB2dmVu
Yzo6IEZJTEUgdnZlbmNUYXJnZXRzLSR7Q09ORklHX1BPU1RGSVh9LmNtYWtlIENPTkZJR1VSQVRJT05TIFJlbFdpdG
hEZWJJbmZvIERFU1RJTkFUSU9OICR7Q01BS0VfSU5TVEFMTF9MSUJESVJ9L2NtYWtlL3Z2ZW5jICkKIAogY29uZmln
dXJlX2ZpbGUoIHBrZ2NvbmZpZy9saWJ2dmVuYy5wYy5pbiAke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0vcGtnY2
9uZmlnL2xpYnZ2ZW5jLnBjIEBPTkxZICkKIGluc3RhbGwoIEZJTEVTICR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElS
fS9wa2djb25maWcvbGlidnZlbmMucGMgREVTVElOQVRJT04gJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0vcGtnY29uZm
lnICkKCi0tLSBzb3VyY2UvTGliL3Z2ZW5jL3Z2ZW5jaW1wbC5vbGQJMjAyMS0xMC0wOCAxNjoxNDoyMi43MDAwMDAw
MDAgKzAxMDAKKysrIHNvdXJjZS9MaWIvdnZlbmMvdnZlbmNpbXBsLmNwcAkyMDIxLTEwLTA4IDE2OjE5OjQyLjQ4MD
AwMDAwMCArMDEwMApAQCAtMjM1LDcgKzIzNSw3IEBACiAjZW5kaWYKICAgfQogCi0jaWYgZGVmaW5lZCggX19saW51
eF9fICkKKyNpZiBkZWZpbmVkKCBfX2xpbnV4X18gKSAmJiAhZGVmaW5lZChfX0FORFJPSURfXykKICAgbWFsbG9jX3
RyaW0oMCk7ICAgLy8gZnJlZSB1bnVzZWQgaGVhcCBtZW1vcnkKICNlbmRpZgogCkBAIC00MDMsNyArNDAzLDcgQEAK
ICAgICBpUmV0ID0geENvcHlBdSggKnBjQWNjZXNzVW5pdCwgY0F1ICApOwogICB9CiAKLSNpZiBkZWZpbmVkKCBfX2
xpbnV4X18gKQorI2lmIGRlZmluZWQoIF9fbGludXhfXyApICYmICFkZWZpbmVkKF9fQU5EUk9JRF9fKQogICBtYWxs
b2NfdHJpbSgwKTsgICAvLyBmcmVlIHVudXNlZCBoZWFwIG1lbW9yeQogI2VuZGlmCg==
XB64_PATCH


# Filelist
# --------
# share/doc/vvenc/LICENSE.txt
# share/doc/vvenc/AUTHORS.md
# bin/vvencFFapp
# bin/vvencapp
# include/vvenc/vvencCfg.h
# include/vvenc/vvenc.h
# include/vvenc/vvencDecl.h
# include/vvenc/version.h
# lib/libvvenc.so
# lib/libvvenc.a
# lib/pkgconfig/libvvenc.pc
# lib/cmake/vvenc/vvencTargets-static-release.cmake
# lib/cmake/vvenc/vvencTargets-static.cmake
# lib/cmake/vvenc/vvencTargets-shared-release.cmake
# lib/cmake/vvenc/vvencTargets-shared.cmake
# lib/cmake/vvenc/vvencConfigVersion.cmake
# lib/cmake/vvenc/vvencConfig.cmake
