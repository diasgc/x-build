#!/bin/bash
cat << "EOF"

THE ▀▄ ▄▀   █▀▀▄ █  █ ▀█▀ █   █▀▀▄ █▀▀ █▀▀▄ 
     ▄▀▄ ▀▀ █▀▀▄ █  █  █  █   █  █ █▀▀ █▀▀▄ 
    ▀   ▀   ▀▀▀  ▀▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀  ▀▀▀ ▀  ▀
    A cross-compile builder scripting helper
EOF

jload(){
    lib=$1
    jlib=$(cat .pkglist | jq '."'${lib}'"')
    jpkg=$(echo "${jlib}" | jq -r '.pkg // empty')
}

jval(){
    echo "${jlib}" | jq --arg key "$1" -r '.[$key] // empty'
}

jpkg(){
    echo "${jpkg}" | jq --arg key "$1" -r '.[$key] // empty'
}

x_eval(){
    if [ -n "$1" ]; then
        local xvar=$(jval $1)
        [ -n "${xvar}" ] && eval ${xvar}
    fi
    return 0
}

get_latest_release() {
    local github_tag=$(echo "$src" | sed 's/https:\/\/github.com\///;s/.git//')
    curl --silent "https://api.github.com/repos/${github_tag}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/'
}

jload $1

script=$(jval .sh)
if [ -n "$script" ];then
    shift
    ./$script $@
    exit 0
fi

src=$(jval src)     url=$(jval url)     dsc=$(jval dsc)
lic=$(jval lic)     cbk=$(jval cbk)     mki=$(jval mki)
dep=$(jval dep)     cfg=$(jval bld)     mkf=$(jval mkf)
mkc=$(jval mkc)     cb0=$(jval cb0)     cb1=$(jval cb1)
cbk=$(jval cbk)     tls=$(jval tls)     vrs=$(jval vrs)

src_cfg=$(jval src_cfg)
config_dir=$(jval dir)
src_patch=$(jval src_patch)
patch=$(jval patch)
pc_llib=$(jval pc_llib)

shift && source xbuilder $@

echo -e "  latest release: $(get_latest_release )"
CFG=$(eval echo $(echo $p | jq -r '.cfg // empty'))

$host_ndk && x_eval host_ndk
$host_mingw && x_eval host_mingw

$host_arm && x_eval host_arm
$host_arm32 && x_eval host_arm32
$host_arm64 && x_eval host_arm64
$host_x86 && x_eval host_x86
$host_x64 && x_eval host_x64

start