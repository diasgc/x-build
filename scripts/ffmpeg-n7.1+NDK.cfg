#!/bin/bash

# Missing
# flite --enable-libflite
# libjack --enable-libjack
# rav1e --enable-librav1e
# zvbi --enable-libzvbi

# Errors
## undefined symbols requires Libs.private in .pc
# libiec61883  --enable-libiec61883 (ld.lld: error: unable to find library -lavc1394, -lrom1394)
#              --enable-opengl
#              --enable-omx
# pocketsphinx --enable-pocketsphinx (fatal error: 'pocketsphinx/pocketsphinx.h' file not found)
# libcdio      --enable-libcdio (fatal error: 'cdio/cdda.h' file not found)
# sdl2         --enable-sdl2 (Package sdl2 was not found in the pkg-config search path.)
#
# codec2       --enable-libcodec2 (ld.lld: error: duplicate symbol: lpc_to_lsp in libspeex + codec2)

# Runtime errors:
# libpulse     --enable-libpulse  : no static lin


dep_openssl='openssl libssh'
opt_openssl='--enable-openssl --enable-libssh'

dep_gnutls='gnutls libzmq'
opt_gnutls='--enable-gnutls --enable-libzmq'

argList=( android-armv8 --shared --bin --force )
dep='chromaprint ladspa aom libass libbluray libbs2b libcaca
 dav1d fontconfig freetype
 fribidi libgme libgsm lame libmysofa
 openjpeg libopenmpt opus librabbitmq librist librubberband
 shine snappy soxr speex libsrt svtav1
 theora twolame vidstab vorbis vpx libwebp x265
 libxml2 xvidcore zimg openal
 libjxl vmaf libdrm frei0r x264 libplacebo 
 libqrencode quirc libssh openssl glslang xeve xevd vvenc vvdec liblc3'
dep+=" ${dep_openssl}"
#gnutls is incompatible with gnutls duplicate symbols
extlibs='--enable-chromaprint --enable-ladspa --enable-libaom
 --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca
 --enable-libdav1d --enable-libfontconfig --enable-libfreetype
 --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame
 --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus
 --enable-librabbitmq --enable-librist --enable-librubberband
 --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex
 --enable-libsrt --enable-libsvtav1 --enable-libtheora --enable-libtwolame
 --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp
 --enable-libxml2 --enable-libxvid --enable-libzimg
 --enable-libjxl --enable-libvmaf --enable-frei0r
 --enable-libx265 --enable-libx264 --enable-libplacebo
 --enable-libqrencode --enable-libquirc
 --enable-openal --enable-opencl --enable-libdrm --disable-sndio
 --enable-mediacodec --enable-libglslang --enable-libxeve --enable-libxevd
 --enable-libvvdec --enable-libvvenc --enable-liblc3'
 extlibs+=" ${opt_openssl}"

extraversion='n7.1+NDK_STD'
bra='n7.1-dev^{}'


# AUTO --disable-alsa           disable ALSA support [autodetect]
# AUTO --disable-appkit         disable Apple AppKit framework [autodetect]
# AUTO --disable-avfoundation   disable Apple AVFoundation framework [autodetect]
#      --enable-avisynth        enable reading of AviSynth script files [no]
# AUTO --disable-bzlib          disable bzlib [autodetect]
# AUTO --disable-coreimage      disable Apple CoreImage framework [autodetect]
# OK   --enable-chromaprint     enable audio fingerprinting with chromaprint [no]
# OK   --enable-frei0r          enable frei0r video filtering [no]
#      --enable-gcrypt          enable gcrypt, needed for rtmp(t)e support if openssl, librtmp or gmp is not used [no]
#      --enable-gmp             enable gmp, needed for rtmp(t)e support if openssl or librtmp is not used [no]
#      --enable-gnutls          enable gnutls, needed for https support if openssl, libtls or mbedtls is not used [no]
# AUTO --disable-iconv          disable iconv [autodetect]
# OK   --enable-jni             enable JNI support [no]
# OK   --enable-ladspa          enable LADSPA audio filtering [no]
#      --enable-lcms2           enable ICC profile support via LittleCMS 2 [no]
# OK   --enable-libaom          enable AV1 video encoding/decoding via libaom [no]
#      --enable-libaribb24      enable ARIB text and caption decoding via libaribb24 [no]
#      --enable-libaribcaption  enable ARIB text and caption decoding via libaribcaption [no]
# OK   --enable-libass          enable libass subtitles rendering, needed for subtitles and ass filter [no]
# OK   --enable-libbluray       enable BluRay reading using libbluray [no]
# OK   --enable-libbs2b         enable bs2b DSP library [no]
# OK   --enable-libcaca         enable textual display using libcaca [no]
#      --enable-libcelt         enable CELT decoding via libcelt [no]
# FAIL --enable-libcdio         enable audio CD grabbing with libcdio [no]
# FAIL --enable-libcodec2       enable codec2 en/decoding using libcodec2 [no]
# OK   --enable-libdav1d        enable AV1 decoding via libdav1d [no]
#      --enable-libdavs2        enable AVS2 decoding via libdavs2 [no]
#      --enable-libdc1394       enable IIDC-1394 grabbing using libdc1394 and libraw1394 [no]
#      --enable-libdvdnav       enable libdvdnav, needed for DVD demuxing [no]
#      --enable-libdvdread      enable libdvdread, needed for DVD demuxing [no]
#      --enable-libfdk-aac      enable AAC de/encoding via libfdk-aac [no]
# FAIL --enable-libflite        enable flite (voice synthesis) support via libflite [no]
# OK   --enable-libfontconfig   enable libfontconfig, useful for drawtext filter [no]
# OK   --enable-libfreetype     enable libfreetype, needed for drawtext filter [no]
# OK   --enable-libfribidi      enable libfribidi, improves drawtext filter [no]
#      --enable-libharfbuzz     enable libharfbuzz, needed for drawtext filter [no]
# OK   --enable-libglslang      enable GLSL->SPIRV compilation via libglslang [no]
# OK   --enable-libgme          enable Game Music Emu via libgme [no]
# OK   --enable-libgsm          enable GSM de/encoding via libgsm [no]
#      --enable-libiec61883     enable iec61883 via libiec61883 [no]
#      --enable-libilbc         enable iLBC de/encoding via libilbc [no]
# FAIL --enable-libjack         enable JACK audio sound server [no]
# OK   --enable-libjxl          enable JPEG XL de/encoding via libjxl [no]
#      --enable-libklvanc       enable Kernel Labs VANC processing [no]
#      --enable-libkvazaar      enable HEVC encoding via libkvazaar [no]
#      --enable-liblc3          enable LC3 de/encoding via liblc3 [no]
#      --enable-liblensfun      enable lensfun lens correction [no]
#      --enable-libmodplug      enable ModPlug via libmodplug [no]
# OK   --enable-libmp3lame      enable MP3 encoding via libmp3lame [no]
#      --enable-libopencore-amrnb enable AMR-NB de/encoding via libopencore-amrnb [no]
#      --enable-libopencore-amrwb enable AMR-WB decoding via libopencore-amrwb [no]
#      --enable-libopencv       enable video filtering via libopencv [no]
#      --enable-libopenh264     enable H.264 encoding via OpenH264 [no]
# OK   --enable-libopenjpeg     enable JPEG 2000 de/encoding via OpenJPEG [no]
# OK   --enable-libopenmpt      enable decoding tracked files via libopenmpt [no]
#      --enable-libopenvino     enable OpenVINO as a DNN module backend for DNN based filters like dnn_processing [no]
# OK   --enable-libopus         enable Opus de/encoding via libopus [no]
# OK   --enable-libplacebo      enable libplacebo library [no]
# FAIL --enable-libpulse        enable Pulseaudio input via libpulse [no]
# OK   --enable-libqrencode     enable QR encode generation via libqrencode [no]
# OK   --enable-libquirc        enable QR decoding via libquirc [no]
# OK   --enable-librabbitmq     enable RabbitMQ library [no]
#      --enable-librav1e        enable AV1 encoding via rav1e [no]
# OK   --enable-librist         enable RIST via librist [no]
#      --enable-librsvg         enable SVG rasterization via librsvg [no]
# OK   --enable-librubberband   enable rubberband needed for rubberband filter [no]
#      --enable-librtmp         enable RTMP[E] support via librtmp [no]
#      --enable-libshaderc      enable GLSL->SPIRV compilation via libshaderc [no]
# OK   --enable-libshine        enable fixed-point MP3 encoding via libshine [no]
#      --enable-libsmbclient    enable Samba protocol via libsmbclient [no]
# OK   --enable-libsnappy       enable Snappy compression, needed for hap encoding [no]
# OK   --enable-libsoxr         enable Include libsoxr resampling [no]
# OK   --enable-libspeex        enable Speex de/encoding via libspeex [no]
# OK   --enable-libsrt          enable Haivision SRT protocol via libsrt [no]
# OK   --enable-libssh          enable SFTP protocol via libssh [no]
# OK   --enable-libsvtav1       enable AV1 encoding via SVT [no]
#      --enable-libtensorflow   enable TensorFlow as a DNN module backend for DNN based filters like sr [no]
#      --enable-libtesseract    enable Tesseract, needed for ocr filter [no]
# OK   --enable-libtheora       enable Theora encoding via libtheora [no]
#      --enable-libtls          enable LibreSSL (via libtls), needed for https support if openssl, gnutls or mbedtls is not used [no]
#      --enable-libtorch        enable Torch as one DNN backend [no]
# OK   --enable-libtwolame      enable MP2 encoding via libtwolame [no]
#      --enable-libuavs3d       enable AVS3 decoding via libuavs3d [no]
#      --enable-libv4l2         enable libv4l2/v4l-utils [no]
# OK   --enable-libvidstab      enable video stabilization using vid.stab [no]
# OK   --enable-libvmaf         enable vmaf filter via libvmaf [no]
#      --enable-libvo-amrwbenc  enable AMR-WB encoding via libvo-amrwbenc [no]
# OK   --enable-libvorbis       enable Vorbis en/decoding via libvorbis, native implementation exists [no]
# OK   --enable-libvpx          enable VP8 and VP9 de/encoding via libvpx [no]
# OK   --enable-libvvdec        enable H.266/VVC decoding via vvdec [no]
# OK   --enable-libvvenc        enable H.266/VVC encoding via vvenc [no]
# OK   --enable-libwebp         enable WebP encoding via libwebp [no]
# OK   --enable-libx264         enable H.264 encoding via x264 [no]
# OK   --enable-libx265         enable HEVC encoding via x265 [no]
# OK   --enable-libxeve         enable EVC encoding via libxeve [no]
# OK   --enable-libxevd         enable EVC decoding via libxevd [no]
#      --enable-libxavs         enable AVS encoding via xavs [no]
#      --enable-libxavs2        enable AVS2 encoding via xavs2 [no]
# AUTO --enable-libxcb          enable X11 grabbing using XCB [autodetect]
# AUTO --enable-libxcb-shm      enable X11 grabbing shm communication [autodetect]
# AUTO --enable-libxcb-xfixes   enable X11 grabbing mouse rendering [autodetect]
# AUTO --enable-libxcb-shape    enable X11 grabbing shape rendering [autodetect]
# OK   --enable-libxvid         enable Xvid encoding via xvidcore, native MPEG-4/Xvid encoder exists [no]
# OK   --enable-libxml2         enable XML parsing using the C library libxml2, needed for dash and imf demuxing support [no]
# OK   --enable-libzimg         enable z.lib, needed for zscale filter [no]
#      --enable-libzmq          enable message passing via libzmq [no]
# FAIL --enable-libzvbi         enable teletext support via libzvbi [no]
# ???  --enable-lv2             enable LV2 audio filtering [no]
# AUTO --disable-lzma           disable lzma [autodetect]
#      --enable-decklink        enable Blackmagic DeckLink I/O support [no]
#      --enable-mbedtls         enable mbedTLS, needed for https support if openssl, gnutls or libtls is not used [no]
# OK   --enable-mediacodec      enable Android MediaCodec support [no]
# AUTO --enable-mediafoundation enable encoding via MediaFoundation [auto]
# AUTO --disable-metal          disable Apple Metal framework [autodetect]
# OK   --enable-libmysofa       enable libmysofa, needed for sofalizer filter [no]
# OK   --enable-openal          enable OpenAL 1.1 capture support [no]
# OK   --enable-opencl          enable OpenCL processing [no]
#      --enable-opengl          enable OpenGL rendering [no]
# OK   --enable-openssl         enable openssl, needed for https support if gnutls, libtls or mbedtls is not used [no]
#      --enable-pocketsphinx    enable PocketSphinx, needed for asr filter [no]
# AUTO --disable-sndio          disable sndio support [autodetect]
# AUTO --disable-schannel       disable SChannel SSP, needed for TLS support on Windows if openssl and gnutls are not used [autodetect]
# AUTO --disable-sdl2           disable sdl2 [autodetect]
# AUTO --disable-securetransport disable Secure Transport, needed for TLS support on OSX if openssl and gnutls are not used [autodetect]
#      --enable-vapoursynth     enable VapourSynth demuxer [no]
# AUTO --disable-xlib           disable xlib [autodetect]
# AUTO --disable-zlib           disable zlib [autodetect]