#!/bin/bash

lib='vpx'
dsc='WebM Project VPx codec implementation'
lic='BSD-3c'
src='https://chromium.googlesource.com/webm/libvpx.git'
#src_rel=false

cfg='ac'
ac_opts='--no-host --no-pic --no-sysroot'
am_config='--disable-examples --disable-unit-tests --disable-tools --disable-docs --enable-vp9-highbitdepth --as=yasm'
  #--enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-vp9-temporal-denoising --enable-vp9-postproc \
  #--enable-postproc --enable-onthefly-bitpacking --enable-multi-res-encoding --enable-better-hw-compatibility \
  #--enable-webm-io --enable-libyuv --enable-experimental --enable-pic "

dev_vrs='1.14.1'
pkg_deb='libvpx-dev'
eta='244'

on_src_release(){
  vrs='v1.14.1-rc1'
  src="https://chromium.googlesource.com/webm/libvpx/+archive/${vrs}.tar.gz"
}

on_config(){
  ${src_rel} && on_src_release
  ${build_shared} && unset lib_link #--enable-shared only supported on ELF, OS/2, and Darwin for now

  t2=$(arch_fromid arm64 armv7 x86 x86_64)
  $host_x86 && t3=$(os_fromid android linux win32) || t3=$(os_fromid android linux win64)
  am_config+=" --target=${t2}-${t3}-gcc"

  $host_arm && am_config+=" --enable-neon"
  $host_arm32 && am_config+=" --disable-neon-asm"
  AS=${YASM}

}

lst_inc='vpx/vpx_ext_ratectrl.h
 vpx/vpx_codec.h vpx/vp8dx.h
 vpx/vpx_encoder.h vpx/vpx_decoder.h
 vpx/vp8.h vpx/vpx_integer.h
 vpx/vp8cx.h vpx/vpx_frame_buffer.h
 vpx/vpx_image.h'
lst_lib='libvpx'
lst_bin='vpxenc vpxdec'
lst_lic='LICENSE PATENTS AUTHORS'
lst_pc='vpx.pc'



# cpu av8 av7 x86 x64
# NDK +X+  .   .   .  clang
# GNU +..  .   .   .  gcc
# WIN +..  .   .   .  clang/gcc

# Filelist
# --------
# share/doc/vpx/LICENSE
# share/doc/vpx/PATENTS
# share/doc/vpx/AUTHORS
# include/vpx/vpx_ext_ratectrl.h
# include/vpx/vpx_codec.h
# include/vpx/vp8dx.h
# include/vpx/vpx_encoder.h
# include/vpx/vpx_decoder.h
# include/vpx/vp8.h
# include/vpx/vpx_integer.h
# include/vpx/vp8cx.h
# include/vpx/vpx_frame_buffer.h
# include/vpx/vpx_image.h
# bin/vpxdec
# bin/vpxenc
# lib/pkgconfig/vpx.pc
# lib/libvpx.a
