#!/bin/bash

lib='vulkan'
dsc='Khronos Vulkan-Headers'
lic='Apache-2.0'
src='https://github.com/KhronosGroup/Vulkan-Headers.git'
cfg='cmake'

# Cmake Options
# BUILD_LOADER "Build loader" ON
# BUILD_TESTS "Build tests" ON
# BUILD_LAYERS "Build layers" ON
# BUILD_DEMOS "Build demos" ON
# BUILD_VKJSON "Build vkjson" ON

dev_bra='main'
dev_vrs='1.3.204'
pkg_deb=''
eta='27519155648'

vulkan_loader(){
  dsc='Vulkan Loader'
  src='https://github.com/KhronosGroup/Vulkan-Loader.git'
  url='https://github.com/KhronosGroup/Vulkan-Loader'
  pkg_deb='libvulkan-dev'
  cmake_config='-DBUILD_TESTS=OFF -DBUILD_DEMOS=OFF' #-DBUILD_LOADER=OFF -DBUILD_VKJSON=OFF
  dep='xcb'
}

vulkan_header(){
  dsc='Khronos Vulkan-Headers'
  lic='Apache-2.0'
  src='https://github.com/KhronosGroup/Vulkan-Headers.git'
}

extra_options(){
  case "${1}" in
    --loader) vulkan_loader;;
    --header) vulkan_header;;
  esac
}

on_config_ndk(){
    CFLAGS+=" -I${ANDROID_NDK_HOME}/sources/third_party/vulkan/src/include"
    log_info 'android build not supported'
    end_script
}

lst_inc='vulkan/vulkan.hpp vulkan/vulkan_ios.h
 vulkan/vulkan_funcs.hpp vulkan/vulkan_metal.h
 vulkan/vulkan_structs.hpp vulkan/vulkan_xcb.h
 vulkan/vulkan_xlib_xrandr.h vulkan/vulkan_core.h
 vulkan/vulkan_enums.hpp vulkan/vulkan_xlib.h
 vulkan/vulkan_win32.h vulkan/vulkan.h
 vulkan/vulkan_raii.hpp vulkan/vulkan_android.h
 vulkan/vulkan_vi.h vulkan/vulkan_handles.hpp
 vulkan/vk_icd.h vulkan/vulkan_beta.h
 vulkan/vulkan_fuchsia.h vulkan/vulkan_wayland.h
 vulkan/vulkan_screen.h vulkan/vulkan_ggp.h
 vulkan/vulkan_directfb.h vulkan/vk_layer.h
 vulkan/vulkan_macos.h vulkan/vk_sdk_platform.h
 vulkan/vk_platform.h vk_video/vulkan_video_codecs_common.h
 vk_video/vulkan_video_codec_h264std.h
 vk_video/vulkan_video_codec_h264std_encode.h
 vk_video/vulkan_video_codec_h264std_decode.h
 vk_video/vulkan_video_codec_h265std_encode.h
 vk_video/vulkan_video_codec_h265std_decode.h
 vk_video/vulkan_video_codec_h265std.h'
lst_lib=''
lst_bin=''



# cpu av8 av7 x86 x64
# NDK  .   .   .   .  clang
# GNU  .   .   .   .  gcc
# WIN  .   .   .   .  clang/gcc

# Filelist
# --------
# include/vulkan/vulkan.hpp
# include/vulkan/vulkan_ios.h
# include/vulkan/vulkan_funcs.hpp
# include/vulkan/vulkan_metal.h
# include/vulkan/vulkan_structs.hpp
# include/vulkan/vulkan_xcb.h
# include/vulkan/vulkan_xlib_xrandr.h
# include/vulkan/vulkan_core.h
# include/vulkan/vulkan_enums.hpp
# include/vulkan/vulkan_xlib.h
# include/vulkan/vulkan_win32.h
# include/vulkan/vulkan.h
# include/vulkan/vulkan_raii.hpp
# include/vulkan/vulkan_android.h
# include/vulkan/vulkan_vi.h
# include/vulkan/vulkan_handles.hpp
# include/vulkan/vk_icd.h
# include/vulkan/vulkan_beta.h
# include/vulkan/vulkan_fuchsia.h
# include/vulkan/vulkan_wayland.h
# include/vulkan/vulkan_screen.h
# include/vulkan/vulkan_ggp.h
# include/vulkan/vulkan_directfb.h
# include/vulkan/vk_layer.h
# include/vulkan/vulkan_macos.h
# include/vulkan/vk_sdk_platform.h
# include/vulkan/vk_platform.h
# include/vk_video/vulkan_video_codecs_common.h
# include/vk_video/vulkan_video_codec_h264std.h
# include/vk_video/vulkan_video_codec_h264std_encode.h
# include/vk_video/vulkan_video_codec_h264std_decode.h
# include/vk_video/vulkan_video_codec_h265std_encode.h
# include/vk_video/vulkan_video_codec_h265std_decode.h
# include/vk_video/vulkan_video_codec_h265std.h
# share/vulkan/registry/vkconventions.py
# share/vulkan/registry/generator.py
# share/vulkan/registry/spec_tools/util.py
# share/vulkan/registry/conventions.py
# share/vulkan/registry/cgenerator.py
# share/vulkan/registry/genvk.py
# share/vulkan/registry/validusage.json
# share/vulkan/registry/reg.py
# share/vulkan/registry/vk.xml
